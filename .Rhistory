RCurl::getURLContent("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286.v5.p1#studyHistoryTable")
test <- RCurl::getURLContent("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286.v5.p1#studyHistoryTable")
grepl("<div class="ui-widget" id="studyHistoryTable">", test)
grepl("studyHistoryTable", test)
test <- RCurl::getURLContent("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286.v5.p1")
grepl("studyHistoryTable", test)
test2 <- RCurl::getURLContent("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs001098.v1.p1")
grepl("studyHistoryTable", test2)
grepl("studyHistoryTable", test1)
grepl("studyHistoryTable", test)
install.packages("httr")
install.packages("httr")
library(httr)
status_code("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286")
status_code(GET("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286"))
headers(GET("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000286"))
GET("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000309.v1.p1"))
GET("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000309.v1.p1")
test <- GET("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000309.v1.p1")
View(test)
test[["request"]][["url"]]
test[["url"]]
strsplit(test[["url"]], "=")
strsplit(test[["url"]], "=")[2]
unlist(strsplit(test[["url"]], "="))[2]
phs <- "282"
##standardize the phs name
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs)
url <- GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
View(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
url[["url"]]
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
phs <- 282
content <- RCurl::getURLContent(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
content
content2 <- paste(strsplit(content, "\r*\n")[[1]], sep = "")
content2
content <- RCurl::getURL(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
content2 <- paste(strsplit(content, "\r*\n")[[1]], sep = "")
content2
paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs)
phs <- 282
phs <- phs.version(phs)
phs.version <- function(phs)  {
##standardize the phs name
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- httr::GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
# open the ftp server
#    url<- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/phs", phs, "/")
#    phs <- RCurl::getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE, crlf = TRUE)
#    phs <- paste(strsplit(phs, "\r*\n")[[1]], sep = "")
#    phs <- phs[length(phs)]
#
return(phs)
}
phs <- 282
phs <- phs.version(phs)
content <- RCurl::getURL(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
content2 <- paste(strsplit(content, "\r*\n")[[1]], sep = "")
content2
grepl("A sub-study of",content)
nchar("<span id=\"study-name\" name=\"study-name\">")
substr(content, regexpr("<span id=\"study-name\" name=\"study-name\">", content) + nchar("<span id=\"study-name\" name=\"study-name\">"), "</span>" )
regexpr("<span id=\"study-name\" name=\"study-name\">", content)
substr(content, (regexpr("<span id=\"study-name\" name=\"study-name\">", content) + nchar("<span id=\"study-name\" name=\"study-name\">")), "</span>" )
as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content))
as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content))+ (nchar("<span id=\"study-name\" name=\"study-name\">")
)
substr(content, as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)) + nchar("<span id=\"study-name\" name=\"study-name\">"), "</span>" )
substr(content, (as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)) + nchar("<span id=\"study-name\" name=\"study-name\">")), "</span>" )
substr(content, (as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)) + 40, "</span>" )
substr(content, (as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)), "</span>" )
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)) + nchar("<span id=\"study-name\" name=\"study-name\">")
substr(content, (as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)), regexpr("</span>", content)) )
stop <- regexpr("</span>", content)
substr(content, start, stop)
content <- substr(content, start, stop)
content2 <- paste(strsplit(content, "\r*\n")[[1]], sep = "")
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\\\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\\\\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
content <-substr(content, start, stop)
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">", content)) + nchar("<span id=\"study-name\" name=\"study-name\">")
stop <- as.numeric(regexpr("</span>", content))
content <- RCurl::getURL(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
stop <- as.numeric(regexpr("\n</span>", content)) - 1
content <-substr(content, start, stop)
study.name <- function(phs)  {
phs <- phs.version(phs)
content <- RCurl::getURL(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
start <- as.numeric(regexpr("<span id=\"study-name\" name=\"study-name\">\n", content)) + nchar("<span id=\"study-name\" name=\"study-name\">\n")
stop <- as.numeric(regexpr("\n</span>", content)) - 1
study_name <-substr(content, start, stop)
#  unlist(strsplit(phs, "\\."))[1]
#  gapexchange <- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/", unlist(strsplit(phs, "\\."))[1], "/", phs, "/", "GapExchange_", phs, ".xml")
#  xmllist <- XML::xmlToList(RCurl::getURLContent(gapexchange))
#  study_name <- xmllist[["Studies"]][["Study"]][["Configuration"]][["StudyNameEntrez"]]
return(study_name)
}
study.name("282")
study.name("285")
study.name("286")
content <- RCurl::getURL(paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=", phs))
content
start <- regexpr("A sub-study of", content)
stop <- regexpr("A sub-study of", content) + 300
substr(content, start, stop)
nchar("A sub-study of \n<a href=\"#\" onclick=\"javascript:getPage(this, 'study.cgi', '")
start <- regexpr("A sub-study of \n<a href=\"#\" onclick=\"javascript:getPage(this, 'study.cgi', '", content) + 76
start <- regexpr("A sub-study of \n<a href=\"#\" onclick=\"javascript:getPage(this, 'study.cgi', '", content)
start <- regexpr("A sub-study of \n<a href=\"#\" onclick=\"javascript:getPage(this, "'study.cgi"', "'", content)
start <- regexpr("A sub-study of \n<a href=\"#\" onclick=\"javascript:getPage(this, \'study.cgi\', \'", content)
start <- regexpr("A sub-study of ", content) + 76
stop <- regexpr("A sub-study of", content) + 300
substr(content, start, stop)
start <- regexpr("A sub-study of ", content) + 76
stop <- regexpr(";return true;", content) -3
substr(content, start, stop)
start <- regexpr(";return true;", content) -3
stop <- regexpr(";return true;", content) + 200
parentphs <- substr(content, start, stop)
substr(content, start, stop)
pack <- "/Users/bidou/Documents/GitHub/versmee"
devtools::document(pack)
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
phs <- "1098"
study.name(phs)
parent.study("1098")
phs <- "phs1098.v2.p4"
phs <- unlist(strsplit(phs, "\."))[1]
phs <- unlist(strsplit(phs, "."))[1]
phs <- "phs1098.v2.p4"
unlist(strsplit(phs, "."))[1]
phs <- "phs1098.v2.p4"
strsplit(phs, ".")
strsplit(phs, "\\.")
phs <- unlist(strsplit(phs, "\\."))[1]
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
phs <- "1098"
study.name(phs)
phs.version(phs)
parent.study("1098")
phs.version <- function(phs)  {
##standardize the phs name
# Remove the version
phs <- unlist(strsplit(phs, "\\."))[1]
# Remove version and/or page
phs <- unlist(strsplit(phs, "\."))[1]
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- httr::GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
# open the ftp server
#    url<- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/phs", phs, "/")
#    phs <- RCurl::getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE, crlf = TRUE)
#    phs <- paste(strsplit(phs, "\r*\n")[[1]], sep = "")
#    phs <- phs[length(phs)]
#
return(phs)
}
phs.version <- function(phs)  {
##standardize the phs name
# Remove the version
phs <- unlist(strsplit(phs, "\\."))[1]
# Remove version and/or page
phs <- unlist(strsplit(phs, "\."))[1]
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- httr::GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
# open the ftp server
#    url<- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/phs", phs, "/")
#    phs <- RCurl::getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE, crlf = TRUE)
#    phs <- paste(strsplit(phs, "\r*\n")[[1]], sep = "")
#    phs <- phs[length(phs)]
#
return(phs)
}
phs.version <- function(phs)  {
##standardize the phs name
# Remove the version
phs <- unlist(strsplit(phs, "\\."))[1]
# Remove version and/or page
phs <- unlist(strsplit(phs, "\."))[1]
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- httr::GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
# open the ftp server
#    url<- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/phs", phs, "/")
#    phs <- RCurl::getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE, crlf = TRUE)
#    phs <- paste(strsplit(phs, "\r*\n")[[1]], sep = "")
#    phs <- phs[length(phs)]
#
return(phs)
}
phs.version <- function(phs)  {
##standardize the phs name
# Remove the version
phs <- unlist(strsplit(phs, "\\."))[1]
# Remove version and/or page
phs <- unlist(strsplit(phs, "\."))[1]
# Remove the letters
ind <- c()
for (i in 1:nchar(phs))  {
charac <- substr(phs, i, i)
if (grepl("[[:alpha:]]", charac))  ind <- c(ind, charac)
}
if (!is.null(ind))  {
for (j in 1:length(ind))  {
phs <- sub(ind[j], "", phs)
}
}
# Get sure that phs number has 6 digits, and add leading 0s if necessary
if (nchar(phs) > 6)  warning("too many digits in the phs")
if (nchar(phs) < 6)  {
for (h in 1:(6-nchar(phs)))  {
phs <- paste0("0", phs)
}
}
url<- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs", phs)
url <- httr::GET(url)
phs <- unlist(strsplit(url[["url"]], "="))[2]
#return(phs)
}
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
parent.study("1098")
library(sandboxR)
phs <- "1098"
study.name(phs)
phs.version(phs)
consent.groups("285")
browse.dbgap(phs)
parent.study(phs)
browse.study("285")
browse.study("286")
pack <- "/Users/bidou/Documents/GitHub/versmee"
devtools::document(pack)
devtools::install_github("gversmee/versmee", force = TRUE)
lsf.str("package:sandboxR")
is.parent(phs)
is.parent("285")
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
browse.dbgap("286")
browse.study("286")
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
consent.groups("285")
consent.groups("1098")
browse.study("1098")
phs <- "286"
phs <- phs.version(phs)
unlist(strsplit(phs, "\\."))[1]
gapexchange <- paste0("ftp://anonymous:anonymous@ftp.ncbi.nlm.nih.gov/dbgap/studies/", unlist(strsplit(phs, "\\."))[1], "/", phs, "/", "GapExchange_", phs, ".xml")
xmllist <- XML::xmlToList(RCurl::getURLContent(gapexchange))
View(xmllist)
phs.version("285")
phs <- "286"
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
xmllist <- XML::xmlToList(RCurl::getURLContent(substudies))
View(xmllist)
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
xmllist <- XML::xmlToList(RCurl::getURLContent(substudies))
RCurl::getURLContent(substudies)
phs <- phs.version(phs)
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
xmllist <- XML::xmlToList(RCurl::getURLContent(substudies))
View(xmllist)
getURLContent(substudies)
RCurl::getURLContent(substudies)
test <- RCurl::getURLContent(substudies)
test2 <- paste(url, strsplit(test, "\r*\n")[[1]], sep = "")
test <- RCurl::getURL(substudies)
test2 <- paste(url, strsplit(test, "\r*\n")[[1]], sep = "")
test2 <- strsplit(test, "\r*\n")[[1]]
test2
test <- XML::xmlToList(test2)
View(test)
write(test2, file = "~/Desktop/test.xml")
test[["ul"]]
test3 <- test[[3]]
View(test3)
phs <- phs.version(phs)
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
sub1 <- RCurl::getURLContent(substudies)
sub1 <- strsplit(test, "\r*\n")[[1]]
sub1 <- strsplit(test, "\r*\n")[[1]]
sub1 <- RCurl::getURLContent(substudies)
sub1 <- as.character(RCurl::getURLContent(substudies))
sub1 <- strsplit(test, "\r*\n")[[1]]
sub1 <- strsplit(sub1, "\r*\n")[[1]]
sub1 <- RCurl::getURLContent(substudies)
sub1 <- strsplit(sub1, "\r*\n")[[1]]
sub1 <- XML::xmlToList(sub1)
sub1 <- sub1[[3]]
View(sub1)
length(sub1)
i <- 1
phssub <- sub1[[i]][["a"]][[".attrs"]][["onclick"]]
phssub <- substr(phssub, regexpr("phs", phssub), regexpr("return", phssub)-5)
subst[i,2] <- sub1[[i]][["a"]][["text"]]
sub.study <- function(phs)  {
if (!is.parent(phs))  warning("Your study is not a parent study")
phs <- phs.version(phs)
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
sub1 <- RCurl::getURLContent(substudies)
sub1 <- strsplit(sub1, "\r*\n")[[1]]
sub1 <- XML::xmlToList(sub1)
sub1 <- sub1[[3]]
subst <- data.frame(matrix(ncol = 2))
colnames(subst) <- c("phs", "name")
for (i in 1:length(sub1))  {
phssub <- sub1[[i]][["a"]][[".attrs"]][["onclick"]]
subst[i,1] <- substr(phssub, regexpr("phs", phssub), regexpr("return", phssub)-4)
subst[i,2] <- sub1[[i]][["a"]][["text"]]
}
}
sub.study <- function(phs)  {
if (!is.parent(phs))  warning("Your study is not a parent study")
phs <- phs.version(phs)
substudies <- paste0("https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/GetFolderView.cgi?current_study_id=", phs, "&current_type=101&current_object_id=1&current_folder_type=101")
sub1 <- RCurl::getURLContent(substudies)
sub1 <- strsplit(sub1, "\r*\n")[[1]]
sub1 <- XML::xmlToList(sub1)
sub1 <- sub1[[3]]
subst <- data.frame(matrix(ncol = 2))
colnames(subst) <- c("phs", "name")
for (i in 1:length(sub1))  {
phssub <- sub1[[i]][["a"]][[".attrs"]][["onclick"]]
subst[i,1] <- substr(phssub, regexpr("phs", phssub), regexpr("return", phssub)-4)
subst[i,2] <- sub1[[i]][["a"]][["text"]]
}
subst
}
phs <- "286"
sub.study(phs)
sub.study("7")
pack <- "/Users/bidou/Documents/GitHub/versmee"
devtools::document(pack)
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
sub.study("285")
sub.study("1098")
devtools::document(pack)
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
search.dbgap("Framingham")
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
search.dbgap("Framingham")
remove.packages("sandboxr")
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gversmee/versmee", force = TRUE)
library(sandboxR)
lsf.str("package:sandboxR")
search.dbgap("Framingham")
getwd()
setwd("/Users/bidou/Documents/GitHub/sandboxR")
list.files(all.files = TRUE)
